{"version":3,"file":"static/js/990.5a56b5a7.chunk.js","mappings":"qSAoFA,EA1EoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,SAASG,KAA5B,IAClC,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAeMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACD,SAATP,EACFC,EAAQM,GAERJ,EAAUI,EAEb,EAEKC,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAe,CAClCE,OAAQ,WACRC,WAAY,mDACZC,aAAc,MACdC,OAAQ,EACRC,MAAO,QACPC,OAAQ,OACRC,QAAS,SACTC,UAAW,0CAGb,OACE,iBAAMC,SAlCa,SAAAd,GACnBA,EAAEe,iBACczB,EAAS0B,MAAK,SAAAC,GAAO,OAAIA,EAAQtB,OAASA,CAArB,IAGnCuB,MAAM,GAAD,OAAIvB,EAAJ,8BAELP,GAAS+B,EAAAA,EAAAA,IAAW,CAAExB,KAAAA,EAAME,OAAAA,KAC5BD,EAAQ,IACRE,EAAU,IAEb,EAuBC,UACE,UAACsB,EAAA,EAAD,CAAKC,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,SAAU,kBAAmB,CAAEC,EAAG,IAAnG,WACE,SAACC,EAAA,EAAD,CACEC,GAAG,4BACHC,MAAM,OACNC,QAAQ,WACRlC,KAAK,OACLO,MAAOP,EACPmC,SAAU/B,EACVgC,WAAY,CACVC,gBACE,SAACC,EAAA,EAAD,QAIN,SAACP,EAAA,EAAD,CACEC,GAAG,4BACHC,MAAM,SACNC,QAAQ,WACRlC,KAAK,SACLO,MAAOL,EACPiC,SAAU/B,EACVgC,WAAY,CACVC,gBACE,SAACE,EAAA,EAAD,QAIN,SAAC/B,EAAD,CAAcgC,KAAK,SAAnB,6BAIP,E,uCC5CD,EA7BoB,SAAC,GAA0B,IAAxBR,EAAuB,EAAvBA,GAAIhC,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACzBT,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAAC+C,EAAA,GAAD,CAAUZ,WAAW,aAArB,WACE,SAACa,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CACEC,QAAS7C,EACT8C,UAAW5C,KAEb,SAACQ,EAAA,EAAD,CAAQ8B,KAAK,SAASO,QAAS,kBAdd,SAAAf,GACnBvC,GAASuD,EAAAA,EAAAA,IAAchB,GACxB,CAYwCiB,CAAajB,EAAnB,EAA/B,sBAKL,E,SCID,EA5BoB,WAClB,IAAMvC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,SAASG,KAA5B,IAC5BoD,GAAStD,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASuD,MAAnB,IAE1BC,EAAmBxD,EAASuD,QAAO,SAAA5B,GAAO,OAC9CA,EAAQtB,MAAQsB,EAAQtB,KAAKoD,cAAcC,SAASH,EADN,IAQhD,OAJAI,EAAAA,EAAAA,YAAU,WACR7D,GAAS8D,EAAAA,EAAAA,MACV,GAAE,CAAC9D,KAGF,SAAC+D,EAAA,EAAD,UACGL,EAAiBM,KAAI,SAAAnC,GAAO,OAC3B,SAAC,EAAD,CAEEU,GAAIV,EAAQU,GACZhC,KAAMsB,EAAQtB,KACdE,OAAQoB,EAAQpB,QAHXoB,EAAQU,GAFY,KAUlC,ECLD,EAtBe,WACb,IAAMvC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAACqC,EAAA,EAAD,CACJC,GAAG,4BACHC,MAAM,wBACNC,QAAQ,WACRC,SATuB,SAAAuB,GACnBjE,GAASkE,EAAAA,EAAAA,IAAkBD,EAAMpD,OAAOC,MAAM6C,eAC/C,EAQHhB,WAAY,CACVC,gBACE,SAACC,EAAA,EAAD,KAGJsB,KAAK,SAGJ,ECTD,EAdgB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,iCACE,wBAAKD,IACJC,IAGN,ECUD,EAdiB,WACf,OACE,iCACE,SAAC,EAAD,CAASD,MAAM,YAAf,UACE,SAAC,EAAD,OAEF,UAAC,EAAD,CAASA,MAAM,WAAf,WACE,SAAC,EAAD,KACA,SAAC,EAAD,SAIP,C","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","pages/Contacts.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contactSlice';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport LocalPhoneOutlinedIcon from '@mui/icons-material/LocalPhoneOutlined';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isExist = contacts.some(contact => contact.name === name);\n\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const SubmitButton = styled(Button)({\n    margin: '1rem 0 0',\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: '3px',\n    border: 0,\n    color: 'white',\n    height: '48px',\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', '& > :not(style)': { m: 1 } }}>\n        <TextField\n          id=\"input-with-icon-textfield\"\n          label=\"Name\"\n          variant=\"standard\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: (\n              <AccountCircle />\n            ),\n          }}\n        />\n        <TextField\n          id=\"input-with-icon-textfield\"\n          label=\"Number\"\n          variant=\"standard\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: (\n              <LocalPhoneOutlinedIcon />\n            ),\n          }}\n        />\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </Box>\n    </form>\n  );\n};\n\nexport default ContactForm;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactSlice';\nimport Button from '@mui/material/Button';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport ContactPageSharpIcon from '@mui/icons-material/ContactPageSharp';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  \n  return (\n    <ListItem alignItems=\"flex-start\">\n      <ListItemAvatar>\n        <ContactPageSharpIcon />\n      </ListItemAvatar>\n      <ListItemText\n        primary={name}\n        secondary={number}\n      />\n      <Button type=\"button\" onClick={() => handleDelete(id)}>\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default ContactItem;","import ContactItem from './ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactSlice';\nimport List from '@mui/material/List';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  \n  const filteredContacts = contacts.filter(contact => \n    contact.name && contact.name.toLowerCase().includes(filter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch])\n\n  return (\n    <List>\n      {filteredContacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { setContactsFilter } from 'redux/contactSlice';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport TextField from '@mui/material/TextField';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = event => {\n    dispatch(setContactsFilter(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <TextField\nid=\"input-with-icon-textfield\"\nlabel=\"Find contacts by name\"\nvariant=\"standard\"\nonChange={handleFilter}\nInputProps={{\n  startAdornment: (\n    <AccountCircle />\n  ),\n}}\nsize=\"large\"\n/>\n  );\n};\n\nexport default Filter;\n\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default Section;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","contacts","useSelector","state","items","useState","name","setName","number","setNumber","handleChange","e","target","value","SubmitButton","styled","Button","margin","background","borderRadius","border","color","height","padding","boxShadow","onSubmit","preventDefault","some","contact","alert","addContact","Box","sx","display","flexDirection","alignItems","m","TextField","id","label","variant","onChange","InputProps","startAdornment","AccountCircle","LocalPhoneOutlined","type","ListItem","ListItemAvatar","ContactPageSharp","ListItemText","primary","secondary","onClick","deleteContact","handleDelete","filter","filteredContacts","toLowerCase","includes","useEffect","fetchContacts","List","map","event","setContactsFilter","size","title","children"],"sourceRoot":""}